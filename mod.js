// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var t="function"==typeof Object.defineProperty?Object.defineProperty:null;var r=Object.defineProperty,e=Object.prototype,n=e.toString,o=e.__defineGetter__,i=e.__defineSetter__,u=e.__lookupGetter__,a=e.__lookupSetter__;var c=function(){try{return t({},"x",{}),!0}catch(t){return!1}}()?r:function(t,r,c){var l,f,p,b;if("object"!=typeof t||null===t||"[object Array]"===n.call(t))throw new TypeError("invalid argument. First argument must be an object. Value: `"+t+"`.");if("object"!=typeof c||null===c||"[object Array]"===n.call(c))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+c+"`.");if((f="value"in c)&&(u.call(t,r)||a.call(t,r)?(l=t.__proto__,t.__proto__=e,delete t[r],t[r]=c.value,t.__proto__=l):t[r]=c.value),p="get"in c,b="set"in c,f&&(p||b))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return p&&o&&o.call(t,r,c.get),b&&i&&i.call(t,r,c.set),t};function l(t,r,e){c(t,r,{configurable:!1,enumerable:!1,writable:!1,value:e})}function f(t){return"number"==typeof t}var p="function"==typeof Symbol&&"symbol"==typeof Symbol("foo");function b(){return p&&"symbol"==typeof Symbol.toStringTag}var y=Object.prototype.toString;var _=Object.prototype.hasOwnProperty;var v="function"==typeof Symbol?Symbol.toStringTag:"";var s=b()?function(t){var r,e,n,o,i;if(null==t)return y.call(t);e=t[v],i=v,r=null!=(o=t)&&_.call(o,i);try{t[v]=void 0}catch(r){return y.call(t)}return n=y.call(t),r?t[v]=e:delete t[v],n}:function(t){return y.call(t)},m=Number,d=m.prototype.toString;var j=b();function g(t){return"object"==typeof t&&(t instanceof m||(j?function(t){try{return d.call(t),!0}catch(t){return!1}}(t):"[object Number]"===s(t)))}function O(t){return f(t)||g(t)}l(O,"isPrimitive",f),l(O,"isObject",g);var S=Number.POSITIVE_INFINITY,h=m.NEGATIVE_INFINITY,w=Math.floor;function I(t){return t<S&&t>h&&w(r=t)===r;var r}function P(t){return f(t)&&I(t)}function T(t){return g(t)&&I(t.valueOf())}function N(t){return P(t)||T(t)}function E(t){return P(t)&&t>=0}function V(t){return T(t)&&t.valueOf()>=0}function F(t){return E(t)||V(t)}function A(t){if(!E(t))throw new TypeError(function(){var t,r=arguments,e="https://stdlib.io/e/"+r[0]+"?";for(t=1;t<r.length;t++)e+="&arg[]="+encodeURIComponent(r[t]);return e}("0iF2V",t));return function(){return arguments[t]}}l(N,"isPrimitive",P),l(N,"isObject",T),l(F,"isPrimitive",E),l(F,"isObject",V);export{A as default};
//# sourceMappingURL=mod.js.map
